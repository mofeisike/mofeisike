<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-05T13:22:11.290Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2019/04/05/hello-world/"/>
    <id>http://yoursite.com/2019/04/05/hello-world/</id>
    <published>2019-04-05T13:22:11.289Z</published>
    <updated>2019-04-05T13:22:11.290Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ES6</title>
    <link href="http://yoursite.com/2017/05/20/ES6/"/>
    <id>http://yoursite.com/2017/05/20/ES6/</id>
    <published>2017-05-20T09:25:34.000Z</published>
    <updated>2019-04-05T14:28:52.661Z</updated>
    
    <content type="html"><![CDATA[<h1 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h1><blockquote><p>ES3, ES5, ES6, ECMAScript,CommonJS,AMD,UMD,CMD</p></blockquote><blockquote><p>ECMAScript2015（ES6）是Javascript最标准的语法式样，是在2015年6月由Ecma国籍组织公布的最新版本，现在己经被多个领域和浏览器所广泛采纳和使用。</p></blockquote><ol><li>新特性</li></ol><ul><li>class类定义</li><li>import/export模块化</li><li>函数定义方法改进（默认值，可变参数，箭头函数）</li><li>1et/const作用域定义</li><li>for…of列举</li><li>Promise，Map/Set/Proxy嵌入式对象追加<br>etc.</li></ul><ol start="2"><li>类似标准</li></ol><ul><li>Typescript</li><li>Coffeescript</li></ul><h1 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h1><h2 id="let-块级作用域"><a href="#let-块级作用域" class="headerlink" title="let(块级作用域)"></a>let(块级作用域)</h2><blockquote><p>作用域</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">2</span>; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">" l "</span>+i)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*还有输出*/</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">" w "</span>+i)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; <span class="number">2</span>; j++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">" l "</span>+j)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*报错,不是在作用域上*/</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">" w "</span>+j)</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">1 0</span></span><br><span class="line"><span class="comment">1 1</span></span><br><span class="line"><span class="comment">w 2</span></span><br><span class="line"><span class="comment">1 0</span></span><br><span class="line"><span class="comment">1 1</span></span><br><span class="line"><span class="comment">Uncaught ReferenceError:j is not defined</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><p>ES3的使用<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> <span class="title">aa</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">5</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="literal">false</span>)&#123;</span><br><span class="line">            <span class="keyword">var</span> a = <span class="number">4</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*undefined*/</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">" a= "</span>+a)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">/*有结果*/</span></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">" b= "</span>+b)</span><br><span class="line">    &#125;</span><br><span class="line">    f();</span><br><span class="line">    f2();</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">a=undefined</span></span><br><span class="line"><span class="comment">b=5</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><p>必须提前声明<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">" c= "</span>+c)</span><br><span class="line">    <span class="comment">///es5</span></span><br><span class="line">    <span class="keyword">var</span> c;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">" d= "</span>+d)</span><br><span class="line">    <span class="comment">//es6</span></span><br><span class="line">    <span class="keyword">let</span> d ;</span><br><span class="line">&#125;)();</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">c= undefined</span></span><br><span class="line"><span class="comment">Uncaught ReferenceError: d is not defined</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure></p><p>let不允许在相同作用域内，重复声明同一个变量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 报错</span><br><span class="line">&#123;</span><br><span class="line">    let a = 10;</span><br><span class="line">    var a = 1;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 报错</span><br><span class="line">&#123;</span><br><span class="line">    let a = 10;</span><br><span class="line">    let a = 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>块级作用域的出现，实际上使得获得广泛应用的立即执行匿名函数（IIFE）不再必要了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// IIFE写法</span><br><span class="line">(function () &#123;</span><br><span class="line">    var tmp = ...;</span><br><span class="line">    ...</span><br><span class="line">&#125;());</span><br><span class="line"></span><br><span class="line">// 块级作用域写法</span><br><span class="line">&#123;</span><br><span class="line">    let tmp = ...;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="const-constant"><a href="#const-constant" class="headerlink" title="const(constant)"></a>const(constant)</h2><blockquote><p>常量, 是指定复制的动作, 不是固定值</p></blockquote><blockquote><p>const的作用域与let命令相同：只在声明所在的块级作用域内有效。</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> he = <span class="literal">true</span>;</span><br><span class="line">he=<span class="literal">false</span>;</span><br><span class="line"><span class="comment">//Uncaught TypeError: Assignment to constant variable.</span></span><br></pre></td></tr></table></figure><h3 id="必须默认值"><a href="#必须默认值" class="headerlink" title="必须默认值"></a>必须默认值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> she;</span><br><span class="line"><span class="comment">//Uncaught SyntaxError: Missing initializer in const declaration</span></span><br></pre></td></tr></table></figure><h3 id="指定赋值的动作-值的变量可以改变的"><a href="#指定赋值的动作-值的变量可以改变的" class="headerlink" title="指定赋值的动作,值的变量可以改变的"></a>指定赋值的动作,值的变量可以改变的</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> user= &#123; <span class="attr">name</span>:<span class="string">"小明"</span>, <span class="attr">age</span>:<span class="number">10</span> &#125;;</span><br><span class="line"><span class="keyword">const</span> users = user;</span><br><span class="line"><span class="built_in">console</span>.log(user);</span><br><span class="line">user.age=<span class="number">12</span>;</span><br><span class="line"><span class="built_in">console</span>.log(users);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">&#123;name:“小好"，age：1e&#125;</span></span><br><span class="line"><span class="comment">&#123;name:"小好”，age：12&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="指定赋值的动作-值的变量可以改变的-1"><a href="#指定赋值的动作-值的变量可以改变的-1" class="headerlink" title="指定赋值的动作,值的变量可以改变的"></a>指定赋值的动作,值的变量可以改变的</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> fruit = [];</span><br><span class="line"></span><br><span class="line"> fruit.push(<span class="number">1</span>);</span><br><span class="line"> fruit.push(<span class="number">2</span>);</span><br><span class="line"> <span class="built_in">console</span>.log(<span class="string">'fruit'</span>,fruit);</span><br><span class="line"> </span><br><span class="line"> <span class="comment">//改变了赋值对象</span></span><br><span class="line"> fruit = [<span class="number">1</span>,<span class="number">2</span>];<span class="comment">//报错</span></span><br></pre></td></tr></table></figure><h2 id="结构数组赋值-数组"><a href="#结构数组赋值-数组" class="headerlink" title="结构数组赋值(数组)"></a>结构数组赋值(数组)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a =<span class="number">3</span>, b = <span class="number">9</span>, c =<span class="number">9</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a+<span class="string">" "</span>+b+<span class="string">" "</span>+c);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> [d,e,f] = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"><span class="built_in">console</span>.log(d+<span class="string">" "</span>+e+<span class="string">" "</span>+f);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">1</span>,<span class="number">4</span>,<span class="number">56</span>]</span><br><span class="line"><span class="keyword">var</span> [dc,ec,fc] = arr;</span><br><span class="line"><span class="built_in">console</span>.log(dc+<span class="string">" "</span>+ec+<span class="string">" "</span>+fc);</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> [g,[h,i]] = [<span class="number">6</span>,[<span class="number">9</span>,<span class="number">0</span>]];</span><br><span class="line"><span class="built_in">console</span>.log(g+<span class="string">" "</span>+h+<span class="string">" "</span>+i);</span><br><span class="line"></span><br><span class="line"><span class="comment">/* o=4 , 后面的都给p(数组)*/</span></span><br><span class="line"><span class="keyword">var</span> [o, ...p] = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">9</span>];</span><br><span class="line"><span class="built_in">console</span>.log(o);<span class="comment">//4</span></span><br><span class="line"><span class="built_in">console</span>.log(p);<span class="comment">//[5,6,9]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*j l有值*, 报错*/</span></span><br><span class="line"><span class="keyword">var</span> [j,,l] = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>];</span><br><span class="line"><span class="built_in">console</span>.log(j+<span class="string">" &lt; "</span>);<span class="comment">//4</span></span><br><span class="line"><span class="built_in">console</span>.log(l+<span class="string">" &lt; "</span>);<span class="comment">//6</span></span><br><span class="line"><span class="built_in">console</span>.log(k+<span class="string">" &lt; "</span>);<span class="comment">//报错</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*dd 没有被赋值,有默认值*/</span></span><br><span class="line"><span class="keyword">let</span> [aa,bb,cc=<span class="string">"def"</span>,dd=<span class="string">'cenf'</span>] = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="built_in">console</span>.log(aa);</span><br><span class="line"><span class="built_in">console</span>.log(bb);</span><br><span class="line"><span class="built_in">console</span>.log(cc);</span><br><span class="line"><span class="built_in">console</span>.log(dd);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> [dd,ee,ff]=[<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line"><span class="keyword">let</span> [gg,hh,jj]=[<span class="number">1</span>,<span class="number">2</span>,<span class="literal">null</span>];</span><br><span class="line"><span class="built_in">console</span>.log(ff);<span class="comment">//undinfind</span></span><br><span class="line"><span class="built_in">console</span>.log(jj);<span class="comment">//null</span></span><br></pre></td></tr></table></figure><h2 id="结构对象赋值-对象"><a href="#结构对象赋值-对象" class="headerlink" title="结构对象赋值(对象)"></a>结构对象赋值(对象)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*赋值的变量提出*/</span></span><br><span class="line">    <span class="keyword">var</span> obj = &#123;</span><br><span class="line">        a:<span class="number">1</span>,</span><br><span class="line">        b:<span class="number">2</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">let</span> &#123;a,b&#125;=obj;</span><br><span class="line">    <span class="built_in">console</span>.log(a);</span><br><span class="line">    <span class="built_in">console</span>.log(b);</span><br></pre></td></tr></table></figure><h3 id="无变量-undefined"><a href="#无变量-undefined" class="headerlink" title="无变量:undefined"></a>无变量:undefined</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a:<span class="number">1</span>,</span><br><span class="line">    b:<span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123;a,c,b&#125;=obj;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="built_in">console</span>.log(b);</span><br><span class="line"><span class="comment">//c,没有,就是undefined,无论他的顺序如何</span></span><br><span class="line"><span class="built_in">console</span>.log(c);<span class="comment">//undefined</span></span><br></pre></td></tr></table></figure><h3 id="变量重命名-好习惯-建议使用"><a href="#变量重命名-好习惯-建议使用" class="headerlink" title="变量重命名(好习惯,建议使用)"></a>变量重命名(好习惯,建议使用)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a:<span class="number">1</span>,</span><br><span class="line">    b:<span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123;<span class="attr">a</span>:A,b&#125;=obj;</span><br><span class="line"><span class="built_in">console</span>.log(A);<span class="comment">//1</span></span><br><span class="line"><span class="built_in">console</span>.log(b);<span class="comment">//2</span></span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">//报错</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a:<span class="number">1</span>,</span><br><span class="line">    b:<span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* let &#123;a(对象的变量名称):one(自己取得名称),b:two&#125;=obj; */</span></span><br><span class="line"><span class="keyword">let</span> &#123;<span class="attr">a</span>:one,<span class="attr">b</span>:two&#125;=obj;</span><br><span class="line"><span class="built_in">console</span>.log(one);<span class="comment">//1</span></span><br><span class="line"><span class="built_in">console</span>.log(two);<span class="comment">//2</span></span><br></pre></td></tr></table></figure><h3 id="赋值省略"><a href="#赋值省略" class="headerlink" title="赋值省略"></a>赋值省略</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a:<span class="number">1</span>,</span><br><span class="line">    b:<span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123;<span class="attr">a</span>:a,<span class="attr">b</span>:b&#125;=obj;<span class="comment">// == let &#123;a,b&#125;=obj;</span></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="built_in">console</span>.log(b);</span><br></pre></td></tr></table></figure><h3 id="对象的变量-amp-方法的简写赋值"><a href="#对象的变量-amp-方法的简写赋值" class="headerlink" title="对象的变量&amp;方法的简写赋值"></a>对象的变量&amp;方法的简写赋值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> one = <span class="string">"one"</span> , two = <span class="string">"two"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*以前的做法*/</span></span><br><span class="line"><span class="keyword">let</span> food1 =&#123;</span><br><span class="line">    one:one,</span><br><span class="line">    two:two</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'food1'</span>,food1);</span><br><span class="line"><span class="comment">//food1 &#123;one: "one", two: "two"&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*现在可以直接赋值*/</span></span><br><span class="line"><span class="keyword">let</span> food2 =&#123;</span><br><span class="line">    one,</span><br><span class="line">    two</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'food2'</span>,food2);</span><br><span class="line"><span class="comment">//food2 &#123;one: "one", two: "two"&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*对象的方法可以简写*/</span></span><br><span class="line"><span class="keyword">let</span> food3 =&#123;</span><br><span class="line">    one,</span><br><span class="line">    two,</span><br><span class="line">    three()&#123;&#125;,<span class="comment">//现在的写法</span></span><br><span class="line">    four: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;<span class="comment">//以前的写法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'food3'</span>,food3);</span><br></pre></td></tr></table></figure><h3 id="对象的-‘空值名称’-变量"><a href="#对象的-‘空值名称’-变量" class="headerlink" title="对象的 ‘空值名称’ 变量"></a>对象的 ‘空值名称’ 变量</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> food = &#123;&#125;;</span><br><span class="line"></span><br><span class="line">food.dessert = <span class="string">'🎂'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//报错, 不能用这个方式给对象的变量赋值</span></span><br><span class="line"><span class="comment">//food.hot drink = 'BeBeBe';</span></span><br><span class="line"></span><br><span class="line">food[<span class="string">'hot drink'</span>] = <span class="string">'蜡烛'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这个也可以</span></span><br><span class="line"><span class="keyword">let</span> cat = <span class="string">'red tree'</span>;</span><br><span class="line">food[cat] = <span class="string">'红豆'</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'food'</span>,food);</span><br><span class="line"><span class="comment">//food &#123;dessert: "🎂", hot drink: "蜡烛", red tree: "红豆"&#125;</span></span><br></pre></td></tr></table></figure><h3 id="结构语法"><a href="#结构语法" class="headerlink" title="结构语法"></a>结构语法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a:<span class="number">1</span>,</span><br><span class="line">    b:<span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> a;</span><br><span class="line"><span class="keyword">let</span> &#123;a,b&#125;=obj;<span class="comment">//报错</span></span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="built_in">console</span>.log(b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">    a:<span class="number">1</span>,</span><br><span class="line">    b:<span class="number">2</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">//0</span></span><br><span class="line"><span class="comment">/*加上()表示为结构语法,并不是代码块*/</span></span><br><span class="line">(&#123;a,b&#125;=obj);</span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">//1</span></span><br></pre></td></tr></table></figure><h3 id="复杂值"><a href="#复杂值" class="headerlink" title="复杂值"></a>复杂值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">var obj = &#123;</span><br><span class="line">    arr: [</span><br><span class="line">        &apos;yo&apos;,</span><br><span class="line">        &#123;a:1&#125;,</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">let &#123;arr:[greet,&#123;a&#125;]&#125; = obj;</span><br><span class="line"></span><br><span class="line">console.log(greet);//yo</span><br><span class="line">console.log(a);//1</span><br></pre></td></tr></table></figure><h3 id="空值赋值"><a href="#空值赋值" class="headerlink" title="空值赋值"></a>空值赋值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">let &#123;a=1,b=2&#125;=&#123;a:10&#125;;</span><br><span class="line">let &#123;c=1,d=2&#125;=&#123;&#125;;</span><br><span class="line">let [e=1,f=2]=[];</span><br><span class="line">let &#123;g=1,h:H=2&#125;=&#123;h:10&#125;;</span><br><span class="line"></span><br><span class="line">console.log(a);//10</span><br><span class="line">console.log(b);//2</span><br><span class="line">console.log(c);//1</span><br><span class="line">console.log(d);//2</span><br><span class="line">console.log(e);//1</span><br><span class="line">console.log(f);//2</span><br><span class="line">console.log(g);//1</span><br><span class="line">console.log(H);//10</span><br></pre></td></tr></table></figure><h3 id="接口数据的赋值"><a href="#接口数据的赋值" class="headerlink" title="接口数据的赋值"></a>接口数据的赋值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">let res=&#123;</span><br><span class="line">        stats:200,</span><br><span class="line">        id:12,</span><br><span class="line">        data:[&#123;name:&apos;Bob&apos;&#125;,&#123;name:&apos;San Hai&apos;&#125;]</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    let &#123;stats,id,data&#125;=res;</span><br><span class="line"></span><br><span class="line">    if (stats == 200)</span><br><span class="line">        console.log(id);//10</span><br></pre></td></tr></table></figure><h3 id="方法的赋值"><a href="#方法的赋值" class="headerlink" title="方法的赋值"></a>方法的赋值</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">let &#123;floor,pow&#125;=Math;</span><br><span class="line">let a = 1.9;</span><br><span class="line">console.log(&quot;floor(a) 取小数点 &quot;+floor(a));</span><br><span class="line">console.log(&quot;pow(2,3) 次幂 &quot;+pow(2,3));</span><br></pre></td></tr></table></figure><h2 id="结构赋值-other"><a href="#结构赋值-other" class="headerlink" title="结构赋值(other)"></a>结构赋值(other)</h2><p>长度<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//原生属性不用指定</span></span><br><span class="line"><span class="keyword">let</span> &#123;length&#125; =<span class="string">"yo."</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">" 长度 "</span>+length);<span class="comment">//3</span></span><br></pre></td></tr></table></figure></p><h3 id="解析字符串"><a href="#解析字符串" class="headerlink" title="解析字符串"></a>解析字符串</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//解析字符串</span></span><br><span class="line"><span class="keyword">let</span> [a,b,c]=<span class="string">"yo."</span></span><br><span class="line"><span class="built_in">console</span>.log(a);<span class="comment">//y</span></span><br><span class="line"><span class="built_in">console</span>.log(b);<span class="comment">//o</span></span><br><span class="line"><span class="built_in">console</span>.log(c);<span class="comment">//.</span></span><br></pre></td></tr></table></figure><h2 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h2><h3 id="方法入参"><a href="#方法入参" class="headerlink" title="方法入参"></a>方法入参</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr =[<span class="number">1</span>,<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">[a,b]</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a+<span class="string">" "</span>+b);</span><br><span class="line">&#125;</span><br><span class="line">f(arr);</span><br></pre></td></tr></table></figure><h3 id="方法入参的顺序无关"><a href="#方法入参的顺序无关" class="headerlink" title="方法入参的顺序无关"></a>方法入参的顺序无关</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">b</span>:<span class="number">1</span>,<span class="attr">a</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="comment">/*入参的顺序无关*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">&#123;a,b&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a+<span class="string">" "</span>+b);<span class="comment">//2 1</span></span><br><span class="line">&#125;</span><br><span class="line">f(obj);</span><br></pre></td></tr></table></figure><h3 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> obj = &#123;<span class="attr">b</span>:<span class="number">1</span>&#125;</span><br><span class="line"><span class="comment">/*默认值*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">&#123;a =<span class="number">10</span>,b&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a+<span class="string">" "</span>+b);<span class="comment">//10 1</span></span><br><span class="line">&#125;</span><br><span class="line">f(obj);</span><br></pre></td></tr></table></figure><h3 id="获取方法名称"><a href="#获取方法名称" class="headerlink" title="获取方法名称"></a>获取方法名称</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1. 方法函数参数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//&#123;c,d&#125;=&#123;&#125; : 防止报错</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">a,b,&#123;c,d&#125;=&#123;&#125;</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a,b,c,d);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(<span class="string">'2'</span>,<span class="string">"100"</span>,&#123;<span class="attr">c</span>:<span class="string">"哈哈"</span>,<span class="attr">d</span>:<span class="string">"呵呵"</span>&#125;)</span><br><span class="line"><span class="comment">//2 100 哈哈 呵呵</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//2. 获取方法名称</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>) </span>&#123;&#125;<span class="comment">//匿名方法</span></span><br><span class="line"><span class="built_in">console</span>.log(f1.name);<span class="comment">//f1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> one = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;</span><br><span class="line"><span class="built_in">console</span>.log(one.name);<span class="comment">//one</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> two = <span class="function"><span class="keyword">function</span> <span class="title">supertwo</span>(<span class="params"></span>) </span>&#123;&#125;<span class="comment">// 匿名方法 优先级大于 普通的方法</span></span><br><span class="line"><span class="built_in">console</span>.log(two.name);<span class="comment">//supertwo</span></span><br></pre></td></tr></table></figure><h2 id="箭头函数-arrow-functions"><a href="#箭头函数-arrow-functions" class="headerlink" title="箭头函数( arrow functions)"></a>箭头函数( arrow functions)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 定义变量 = 接受参数的名称 =&gt; 返回值 */</span></span><br><span class="line"><span class="keyword">let</span> one = <span class="function"><span class="params">enter</span> =&gt;</span> enter;</span><br><span class="line"><span class="comment">//es6</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//普通的方法</span></span><br><span class="line"><span class="keyword">var</span> two = <span class="function"><span class="keyword">function</span> <span class="title">two</span>(<span class="params">enter</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> enter</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//接受多个参数</span></span><br><span class="line"><span class="keyword">let</span> three = <span class="function">(<span class="params">enter1,enter2</span>) =&gt;</span> enter1+enter2;</span><br><span class="line"></span><br><span class="line"><span class="comment">//具体的方法写入</span></span><br><span class="line"><span class="keyword">let</span> four = <span class="function">(<span class="params">enter1,enter2</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> enter2+<span class="string">" AND "</span>+enter1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="…"><a href="#…" class="headerlink" title="…"></a>…</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//展开操作符</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ... 表示扩展 */</span></span><br><span class="line"><span class="keyword">let</span> funit = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];</span><br><span class="line"><span class="built_in">console</span>.log(funit);<span class="comment">//(3) [1, 2, 3]</span></span><br><span class="line"><span class="built_in">console</span>.log(...funit);<span class="comment">//1 2 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 数组合并 */</span></span><br><span class="line"><span class="keyword">let</span> foods = [<span class="string">'hello'</span>,...funit];</span><br><span class="line"><span class="built_in">console</span>.log(foods);<span class="comment">//(4) ["hello", 1, 2, 3]</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//剩余操作符</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params">a,...b</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(a +<span class="string">" "</span>+ b);<span class="comment">//其余的参数放入到b, 和拼接为字符串 (一起输出)</span></span><br><span class="line">    <span class="comment">//1 2,hello,4783</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'a'</span>,a);<span class="comment">//a 1 (单独输出)</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'b'</span>,b);<span class="comment">//b (3) [2, "hello", 4783] (单独输出,数组的形式输出)</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'b'</span>,...b);<span class="comment">//b 2 hello 4783 (...单独输出,字符串的形式输出)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">f(<span class="number">1</span>,<span class="number">2</span>,<span class="string">"hello"</span>,<span class="number">4783</span>)</span><br></pre></td></tr></table></figure><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><h3 id="includes"><a href="#includes" class="headerlink" title="includes"></a>includes</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="string">"Yo."</span>.indexOf(<span class="string">"a"</span>) !== <span class="number">-1</span>);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*es6的新功能*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*包含字符串 不用indexof*/</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Yo"</span>.includes(<span class="string">'Y'</span>));<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Yo"</span>.includes(<span class="string">'a'</span>));<span class="comment">//false</span></span><br></pre></td></tr></table></figure><h3 id="startsWith-amp-amp-endsWith"><a href="#startsWith-amp-amp-endsWith" class="headerlink" title="startsWith &amp;&amp; endsWith"></a>startsWith &amp;&amp; endsWith</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*开头包含字符串*/</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Yo"</span>.startsWith(<span class="string">'Y'</span>));<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Yo"</span>.startsWith(<span class="string">'a'</span>));<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*结尾包含字符串*/</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Yo"</span>.endsWith(<span class="string">'o'</span>));<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Yo"</span>.endsWith(<span class="string">'a'</span>));<span class="comment">//false</span></span><br></pre></td></tr></table></figure><h3 id="repat"><a href="#repat" class="headerlink" title="repat"></a>repat</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*重复字符串*/</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Yo"</span>.repeat(<span class="number">3</span>));</span><br></pre></td></tr></table></figure><h2 id="模板字符串"><a href="#模板字符串" class="headerlink" title="模板字符串"></a>模板字符串</h2><h3 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> dessert = <span class="string">"123"</span>,drink = <span class="string">"456"</span>;</span><br><span class="line"><span class="keyword">let</span> braek = <span class="string">`江天多好<span class="subst">$&#123;dessert&#125;</span>和<span class="subst">$&#123;drink&#125;</span>`</span>;</span><br><span class="line"><span class="built_in">console</span>.log(braek);<span class="comment">// 江天多好123和456</span></span><br></pre></td></tr></table></figure><h3 id="解析模板字符串的方法"><a href="#解析模板字符串的方法" class="headerlink" title="解析模板字符串的方法"></a>解析模板字符串的方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> dessert = <span class="string">"123"</span>,drink = <span class="string">"456"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> braek = analysis<span class="string">`江天\n多好<span class="subst">$&#123;dessert&#125;</span>和<span class="subst">$&#123;drink&#125;</span>啊`</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">analysis</span>(<span class="params">strings,...values</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'strings'</span>,strings);</span><br><span class="line">    <span class="comment">//strings (3) ["江天多好", "和", "啊", raw: Array(3)]</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'values'</span>,values);</span><br><span class="line">    <span class="comment">//values (2) ["123", "456"]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="实例2"><a href="#实例2" class="headerlink" title="实例2"></a>实例2</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*$&#123;&#125;表示变量*/</span></span><br><span class="line"><span class="keyword">let</span> title = <span class="string">"lorem"</span>;</span><br><span class="line"><span class="keyword">let</span> name = <span class="string">"Hello"</span>;</span><br><span class="line"><span class="keyword">let</span> tpl = <span class="string">`</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;span&gt;<span class="subst">$&#123;title&#125;</span>&lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"tpl: "</span>+tpl);</span><br><span class="line"><span class="comment">//保留tpl的断行,直接拼接元素</span></span><br></pre></td></tr></table></figure><h3 id="实例3"><a href="#实例3" class="headerlink" title="实例3"></a>实例3</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*里面可以继续接上元素*/</span></span><br><span class="line"><span class="keyword">let</span> tpl2 = <span class="string">`</span></span><br><span class="line"><span class="string">&lt;div&gt;</span></span><br><span class="line"><span class="string">    &lt;span&gt;<span class="subst">$&#123;title+ <span class="string">`</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">        &lt;p&gt;<span class="subst">$&#123;name&#125;</span>2016&lt;/p&gt;</span></span></span></span><br><span class="line"><span class="string"><span class="subst"><span class="string">    `</span>&#125;</span></span></span><br><span class="line"><span class="string">    &lt;/span&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;</span></span><br><span class="line"><span class="string">`</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"tpl2: "</span>+tpl2);</span><br></pre></td></tr></table></figure><h2 id="Symbol"><a href="#Symbol" class="headerlink" title="Symbol"></a>Symbol</h2><blockquote><p>作用: 用于对象的属性值的赋值,不会重复覆盖</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//files1,js</span></span><br><span class="line"><span class="keyword">let</span> name = <span class="built_in">Symbol</span>();</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">var</span> person = &#123;&#125;;</span><br><span class="line">    person[name] = <span class="string">'File1'</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"person[name]"</span>,person[name]);</span><br><span class="line">    <span class="comment">//person[name] File1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">一种情况:就是后面的代码在person的对象里面重新覆盖到那个变量的名称</span></span><br><span class="line"><span class="comment">在这里可以不用怕覆盖,因为这个Symbol(),独一无二的变量,不会被覆盖</span></span><br><span class="line"><span class="comment">而且在作用域的范围内,在这个files2的范围里,为新的值,在出去这个范围里</span></span><br><span class="line"><span class="comment">就是原本的值,而且person的name里面有两个name,两个不同的Symbol()</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//files2</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> name = <span class="built_in">Symbol</span>();</span><br><span class="line">    person[name] = <span class="string">'File2'</span>;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"person[name]"</span>,person[name]);</span><br><span class="line">    <span class="comment">//person[name] File2</span></span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"person"</span>,person);</span><br><span class="line">    <span class="comment">//person &#123;Symbol(): "File1", Symbol(): "File2"&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"person[name]"</span>,person[name]);</span><br><span class="line"><span class="comment">//person[name] File1</span></span><br></pre></td></tr></table></figure><h2 id="Proxy"><a href="#Proxy" class="headerlink" title="Proxy"></a>Proxy</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*ES5不可以*/</span></span><br><span class="line"><span class="keyword">var</span> user = &#123;</span><br><span class="line">    full_name: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.fname+<span class="string">' '</span>+<span class="keyword">this</span>.lname;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">user.fname = <span class="string">'Bob'</span>;</span><br><span class="line">user.lname = <span class="string">'Wood'</span>;</span><br><span class="line">user.full_name();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'user.full_name'</span>,user.full_name);<span class="comment">//没有输出</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*ES6可以*/</span></span><br><span class="line"><span class="keyword">var</span> users = <span class="keyword">new</span> <span class="built_in">Proxy</span>(&#123;&#125;,&#123;</span><br><span class="line">    <span class="comment">//get 方法和过滤器一样</span></span><br><span class="line">    <span class="keyword">get</span>:function (obj,prop) &#123;</span><br><span class="line">        <span class="keyword">if</span> (prop == <span class="string">"full_name"</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> obj.fnames+<span class="string">" "</span>+obj.lnames;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="keyword">set</span>:function (obj,prop) &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">users.fnames= <span class="string">'Bob'</span>;</span><br><span class="line">users.lnames= <span class="string">'Wood'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'user.full_name'</span>,users.full_name);<span class="comment">//user.full_name Bob Wood</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'user.age'</span>,users.age);<span class="comment">// undefined</span></span><br></pre></td></tr></table></figure><h2 id="Set-不能有重复的内容"><a href="#Set-不能有重复的内容" class="headerlink" title="Set(不能有重复的内容)"></a>Set(不能有重复的内容)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">12</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">2</span>];</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'arr'</span>,arr);<span class="comment">//arr (4) [12, 3, 4, 2]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> s = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">4</span>,<span class="number">3</span>]);</span><br><span class="line"><span class="comment">//去除重复</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'s'</span>,s);<span class="comment">//s Set(4) &#123;1, 2, 3, 4&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'s.size'</span>,s.size);<span class="comment">//长度</span></span><br><span class="line"></span><br><span class="line">s.add(<span class="number">100</span>);</span><br><span class="line">s.add(<span class="number">4</span>);<span class="comment">//重复的不会添加</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'s.add'</span>,s);<span class="comment">//s Set(5) &#123;1, 2, 3, 4, 100&#125;</span></span><br><span class="line"></span><br><span class="line">s.delete(<span class="number">2</span>)<span class="comment">//删除2这个元素</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'s.delete'</span>,s);<span class="comment">//s Set(4) &#123;1, 3, 4, 100&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//包含</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'s.has(100);'</span>,s.has(<span class="number">100</span>));<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">s.forEach(<span class="function"><span class="params">s</span>=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">"foreach: "</span>,s);</span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">s.clear();</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'s'</span>,s);<span class="comment">//s Set(0) &#123;&#125;</span></span><br></pre></td></tr></table></figure><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> food = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(food);</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> fruit = &#123;<span class="attr">data</span>:<span class="number">2019</span>&#125;,cook=<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;,dessert=<span class="string">"甜点"</span>;</span><br><span class="line"></span><br><span class="line">food.set(fruit,<span class="string">"one"</span>);</span><br><span class="line">food.set(cook,<span class="string">"two"</span>);</span><br><span class="line">food.set(dessert,<span class="string">"three"</span>);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(food);</span><br><span class="line"><span class="comment">// 键值对的形式</span></span><br><span class="line"><span class="comment">// Map(3) &#123;&#123;…&#125; =&gt; "one", ƒ =&gt; "two", "甜点" =&gt; "three"&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(food.size);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'food.get(fruit): '</span>,food.get(fruit));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'food.get(cook): '</span>,food.get(cook));</span><br><span class="line"></span><br><span class="line">food.delete(dessert)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 是否包含一个元素</span></span><br><span class="line"><span class="built_in">console</span>.log(food.has(dessert));</span><br><span class="line"><span class="built_in">console</span>.log(food);</span><br><span class="line"><span class="comment">// Map(2) &#123;&#123;…&#125; =&gt; "one", ƒ =&gt; "two"&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">food.forEach(<span class="function">(<span class="params">value ,key</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`<span class="subst">$&#123;key&#125;</span> =  <span class="subst">$&#123;value&#125;</span>`</span>);</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    [object Object] =  one</span></span><br><span class="line"><span class="comment">    function () &#123;&#125; =  two</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line">food.clear();</span><br><span class="line"><span class="built_in">console</span>.log(food);</span><br></pre></td></tr></table></figure><h2 id="export-import"><a href="#export-import" class="headerlink" title="export import (?)"></a>export import (?)</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>JavaScript</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>JavaScript</span><br></pre></td></tr></table></figure><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><h3 id="特殊的准确的判断-等于-–-is"><a href="#特殊的准确的判断-等于-–-is" class="headerlink" title="特殊的准确的判断 等于 – is()"></a>特殊的准确的判断 等于 – is()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 特殊的准确的判断 等于</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(+<span class="number">0</span> == <span class="number">-0</span>);<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(+<span class="number">0</span> === <span class="number">-0</span>);<span class="comment">//true</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span> == <span class="literal">NaN</span>);<span class="comment">//false</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.is(+<span class="number">0</span>,<span class="number">-0</span>));<span class="comment">//false</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.is(<span class="literal">NaN</span>,<span class="literal">NaN</span>));<span class="comment">//true</span></span><br></pre></td></tr></table></figure><h3 id="assign-把一个对象的内容赋值另一个"><a href="#assign-把一个对象的内容赋值另一个" class="headerlink" title="assign 把一个对象的内容赋值另一个"></a>assign 把一个对象的内容赋值另一个</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// assign 赋值 把一个对象的内容赋值另一个</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> breakfast = &#123;<span class="attr">ka</span>:<span class="number">1</span>,<span class="attr">pa</span>:<span class="number">4</span>,<span class="attr">ca</span>:<span class="number">5</span>&#125;;</span><br><span class="line"><span class="keyword">let</span> nonofast = &#123;<span class="attr">la</span>:<span class="number">3</span>,<span class="attr">jo</span>:<span class="number">3</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Object</span>.assign(breakfast,nonofast);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'breakfast'</span>,breakfast);</span><br><span class="line"><span class="comment">//breakfast &#123;ka: 1, pa: 4, ca: 5, la: 3, jo: 3&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">'nonofast'</span>,nonofast);</span><br><span class="line"><span class="comment">//nonofast &#123;la: 3, jo: 3&#125;</span></span><br></pre></td></tr></table></figure><h3 id="setPrototypeOf-可在创建对象后-改变设置对象属性"><a href="#setPrototypeOf-可在创建对象后-改变设置对象属性" class="headerlink" title="setPrototypeOf 可在创建对象后,改变设置对象属性"></a>setPrototypeOf 可在创建对象后,改变设置对象属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> breakfast = &#123;</span><br><span class="line">    getDrink()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'A'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> nonofast = &#123;</span><br><span class="line">    getDrink()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'B'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//创建一个对象,用breakfast</span></span><br><span class="line"><span class="keyword">let</span> sunday = <span class="built_in">Object</span>.create(breakfast);</span><br><span class="line"><span class="built_in">console</span>.log(sunday.getDrink());<span class="comment">//A</span></span><br><span class="line"><span class="comment">// sunday == breakfast</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getPrototypeOf(sunday)==breakfast);<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置对象 sunday 到 nonofast</span></span><br><span class="line"><span class="built_in">Object</span>.setPrototypeOf(sunday,nonofast);</span><br><span class="line"><span class="built_in">console</span>.log(sunday.getDrink());<span class="comment">//B</span></span><br><span class="line"><span class="comment">// sunday == nonofast</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getPrototypeOf(sunday)==nonofast);<span class="comment">//true</span></span><br></pre></td></tr></table></figure><h3 id="proto-得到或者是设置对象的属性"><a href="#proto-得到或者是设置对象的属性" class="headerlink" title="__proto__  : 得到或者是设置对象的属性"></a><code>__proto__</code>  : 得到或者是设置对象的属性</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">//__proto__  : 得到或者是设置对象的属性</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> breakfast = &#123;</span><br><span class="line">    getDrink()&#123;<span class="keyword">return</span> <span class="string">'A'</span>;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> nonofast = &#123;</span><br><span class="line">    getDrink()&#123;<span class="keyword">return</span> <span class="string">'B'</span>;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// __proto__  可以在对象的表达式里面设置</span></span><br><span class="line"><span class="keyword">let</span> sunday = &#123;</span><br><span class="line">    __proto__ :breakfast</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sunday.getDrink());<span class="comment">//A</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getPrototypeOf(sunday) === breakfast );<span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">sunday.__proto__=nonofast;</span><br><span class="line"><span class="built_in">console</span>.log(sunday.getDrink());<span class="comment">//B</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">Object</span>.getPrototypeOf(sunday) === nonofast);<span class="comment">//true</span></span><br></pre></td></tr></table></figure><h3 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">let</span> breakfast = &#123;</span><br><span class="line">    getDrink()&#123;<span class="keyword">return</span> <span class="string">'A'</span>;&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> sunday = &#123;</span><br><span class="line">    <span class="comment">//获取breakfast的getDrink()方法</span></span><br><span class="line">    __proto__ :breakfast, </span><br><span class="line">    <span class="comment">// 要重新定义getDrink(),覆盖掉breakfast的getDrink(),</span></span><br><span class="line">    <span class="comment">// 还想要得到breakfast的getDrink()的返回值</span></span><br><span class="line">    getDrink()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.getDrink()+<span class="string">" 改过的 "</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(sunday.getDrink());<span class="comment">//A 改过的</span></span><br></pre></td></tr></table></figure><h2 id="Iterators"><a href="#Iterators" class="headerlink" title="Iterators"></a>Iterators</h2><blockquote><p>轮流交互  {value:xx,done:ture/false}</p></blockquote><blockquote><p>next :返回对象(value:done),最后一个没有对象 就是undefined</p></blockquote><blockquote><p>Generators</p></blockquote><h3 id="Iterators-手动创建迭代器"><a href="#Iterators-手动创建迭代器" class="headerlink" title="Iterators(手动创建迭代器)"></a>Iterators(手动创建迭代器)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Iterators</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">chef</span>(<span class="params">foods</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span>&#123;</span><br><span class="line">        next()&#123;</span><br><span class="line">            <span class="comment">/*有迭代就是true反之false*/</span></span><br><span class="line">            <span class="keyword">let</span> done = (i &gt;= foods.length);</span><br><span class="line">            <span class="comment">/*i++ 索引号+1  是数组的索引*/</span></span><br><span class="line">            <span class="keyword">let</span> value = !done ? foods[i++] : <span class="literal">undefined</span>;</span><br><span class="line">            <span class="keyword">return</span>&#123;</span><br><span class="line">                value:value,</span><br><span class="line">                done:done</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> wanghao = chef([<span class="string">'12'</span>,<span class="string">'34'</span>]);</span><br><span class="line"><span class="built_in">console</span>.log(wanghao.next()); <span class="comment">// &#123;value: "12", done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(wanghao.next()); <span class="comment">// &#123;value: "34", done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(wanghao.next()); <span class="comment">// &#123;value: undefined, done: true&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Generators-生成器"><a href="#Generators-生成器" class="headerlink" title="Generators(生成器)"></a>Generators(生成器)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*自建简单的迭代器*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">chef</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">'12'</span>;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">'32'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//这样也可以</span></span><br><span class="line"><span class="keyword">let</span> chefss = <span class="function"><span class="keyword">function</span>* (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">'12'</span>;</span><br><span class="line">    <span class="keyword">yield</span> <span class="string">'32'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> wanghao = chef();</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(wanghao.next());<span class="comment">//&#123;value: "12", done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(wanghao.next());<span class="comment">//&#123;value: "32", done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(wanghao.next());<span class="comment">//&#123;value: undefined, done: true&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*入参的迭代器*/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span>* <span class="title">chefs</span>(<span class="params">food</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; food.length; i++) &#123;</span><br><span class="line">        <span class="keyword">yield</span> food[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> wanghaoS = chefs([<span class="string">'54'</span>,<span class="string">'65'</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(wanghaoS.next());<span class="comment">//&#123;value: "54", done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(wanghaoS.next());<span class="comment">//&#123;value: "65", done: false&#125;</span></span><br><span class="line"><span class="built_in">console</span>.log(wanghaoS.next());<span class="comment">//&#123;value: undefined, done: true&#125;</span></span><br></pre></td></tr></table></figure><h2 id="类"><a href="#类" class="headerlink" title="类"></a>类</h2><h3 id="constructor-and-自定义方法"><a href="#constructor-and-自定义方法" class="headerlink" title="constructor and 自定义方法"></a>constructor and 自定义方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*JavaScript定义一个类*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chef</span></span>&#123;</span><br><span class="line">    <span class="comment">//一个本来有的方法 和 构造函数一样</span></span><br><span class="line">    <span class="keyword">constructor</span>(food)&#123;</span><br><span class="line">        <span class="keyword">this</span>.food = food;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//自定义的方法</span></span><br><span class="line">    cook()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.food);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//基于这个类创建实例</span></span><br><span class="line"><span class="keyword">let</span> wanghao = <span class="keyword">new</span> Chef(<span class="string">'100'</span>);</span><br><span class="line"></span><br><span class="line">wanghao.cook();<span class="comment">//100</span></span><br></pre></td></tr></table></figure><h3 id="set-and-get"><a href="#set-and-get" class="headerlink" title="set and get"></a>set and get</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/*JavaScript定义一个类*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chef</span></span>&#123;</span><br><span class="line">    <span class="comment">//一个本来有的方法 和 构造函数一样</span></span><br><span class="line">    <span class="keyword">constructor</span>(food)&#123;</span><br><span class="line">        <span class="keyword">this</span>.food = food;</span><br><span class="line">        <span class="keyword">this</span>.dish = [];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">get</span> menu()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.dish;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">set</span> menu(dish)&#123;</span><br><span class="line">        <span class="keyword">this</span>.dish.push(dish)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自定义的方法</span></span><br><span class="line">    cook()&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="keyword">this</span>.food);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> wanghao = <span class="keyword">new</span> Chef();</span><br><span class="line"><span class="built_in">console</span>.log(wanghao.menu = <span class="string">'233'</span>);<span class="comment">//233</span></span><br><span class="line"><span class="built_in">console</span>.log(wanghao.menu = <span class="string">'669'</span>);<span class="comment">//669</span></span><br><span class="line"><span class="built_in">console</span>.log(wanghao.menu);<span class="comment">//(2) ["233", "669"]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//基于这个类创建实例</span></span><br><span class="line"><span class="keyword">let</span> wanghaos = <span class="keyword">new</span> Chef(<span class="string">'100'</span>);</span><br><span class="line">wanghaos.cook();<span class="comment">//100</span></span><br></pre></td></tr></table></figure><h3 id="static-静态方法"><a href="#static-静态方法" class="headerlink" title="static 静态方法"></a>static 静态方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*JavaScript定义一个类*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chef</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">constructor</span>(food)&#123;</span><br><span class="line">        <span class="keyword">this</span>.food = food;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//静态方法</span></span><br><span class="line">    <span class="keyword">static</span> cook(cat)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(cat);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Chef.cook(<span class="string">"10398"</span>);<span class="comment">//10398</span></span><br></pre></td></tr></table></figure><h3 id="super继承"><a href="#super继承" class="headerlink" title="super继承"></a>super继承</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name,bir)&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">        <span class="keyword">this</span>.bir = bir;</span><br><span class="line">    &#125;</span><br><span class="line">    back()&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.name&#125;</span>`</span> ,<span class="string">`<span class="subst">$&#123;<span class="keyword">this</span>.bir&#125;</span>`</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chef</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(name,bir)&#123;</span><br><span class="line">        <span class="keyword">super</span>(name,bir)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> wh = <span class="keyword">new</span> Chef(<span class="string">'wang'</span>,<span class="string">'1999'</span>)</span><br><span class="line"><span class="built_in">console</span>.log(wh.back());<span class="comment">//1999</span></span><br></pre></td></tr></table></figure><h2 id="Module"><a href="#Module" class="headerlink" title="Module"></a>Module</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 重命名导出与导入的东西</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>JavaScript</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">``</span><span class="string">`</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">## 导出与导入默认</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">`</span><span class="string">``</span>JavaScript</span><br></pre></td></tr></table></figure><pre><code class="JavaScript"></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;ES3, ES5, ES6, ECMAScript,CommonJS,AMD,UMD,CMD&lt;/p&gt;
&lt;/bloc
      
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>Npm</title>
    <link href="http://yoursite.com/2017/04/30/Npm/"/>
    <id>http://yoursite.com/2017/04/30/Npm/</id>
    <published>2017-04-30T09:25:34.000Z</published>
    <updated>2019-04-05T14:28:52.651Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本"><a href="#基本" class="headerlink" title="基本"></a>基本</h1><h2 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h2><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><blockquote><p>npm不需要单独安装。在安装Node的时候，会连带一起安装npm。但是，Node附带的npm可能不是最新版本，最好用下面的命令，更新到最新版本。</p></blockquote><p><code>npm install npm@latest -g</code><br>-g: 全局<br>@latest表示最新版本</p><h3 id="npm-init-y-初始化"><a href="#npm-init-y-初始化" class="headerlink" title="npm init -y (初始化)"></a>npm init -y (初始化)</h3><blockquote><p>npm init用来初始化生成一个新的package.json文件。</p></blockquote><p>-f（代表force）</p><p>-y（代表yes）</p><p>-y: 忽略Y/N</p><p>生成package.json<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;name&quot;: &quot;es6&quot;,</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  &quot;main&quot;: &quot;chif.js&quot;,</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;keywords&quot;: [],</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="npm-install-jquery-安装"><a href="#npm-install-jquery-安装" class="headerlink" title="npm install jquery (安装)"></a>npm install jquery (安装)</h3><p>简写 n i juery</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">npm notice created a lockfile as package-lock.json. You should commit this file.</span><br><span class="line">npm WARN es6@1.0.0 No description</span><br><span class="line">npm WARN es6@1.0.0 No repository field.</span><br><span class="line"></span><br><span class="line">+ jquery@3.3.1</span><br><span class="line">added 1 package from 1 contributor and audited 1 package in 2.193s</span><br><span class="line">found 0 vulnerabilities</span><br></pre></td></tr></table></figure><p>目录<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">2019/03/16  14:18    &lt;DIR&gt;          .</span><br><span class="line">2019/03/16  14:18    &lt;DIR&gt;          ..</span><br><span class="line">2019/03/16  14:08               199 index12.html</span><br><span class="line">2019/03/16  14:16    &lt;DIR&gt;          node_modules</span><br><span class="line">2019/03/16  14:16               350 package-lock.json</span><br><span class="line">2019/03/16  14:16               264 package.json</span><br></pre></td></tr></table></figure></p><h3 id="npm-i-安装配置文件的包"><a href="#npm-i-安装配置文件的包" class="headerlink" title="npm i (安装配置文件的包)"></a>npm i (安装配置文件的包)</h3><blockquote><p>在有配置文件的情况下,可以直接安装包的文件,在删除了已安装的包删除,也可以</p></blockquote><p>package.json<br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"es6"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"1.0.0"</span>,</span><br><span class="line">  <span class="attr">"description"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"main"</span>: <span class="string">"chif.js"</span>,</span><br><span class="line">  <span class="attr">"scripts"</span>: &#123;</span><br><span class="line">    <span class="attr">"test"</span>: <span class="string">"echo \"Error: no test specified\" &amp;&amp; exit 1"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"keywords"</span>: [],</span><br><span class="line">  <span class="attr">"author"</span>: <span class="string">""</span>,</span><br><span class="line">  <span class="attr">"license"</span>: <span class="string">"ISC"</span>,</span><br><span class="line">  <span class="attr">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="attr">"bootstrap"</span>: <span class="string">"^4.3.1"</span>,</span><br><span class="line">    <span class="attr">"jquery"</span>: <span class="string">"^3.3.1"</span>,</span><br><span class="line">    <span class="attr">"vue"</span>: <span class="string">"^2.6.9"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="npm-uninstall-normalize-css-删除依赖"><a href="#npm-uninstall-normalize-css-删除依赖" class="headerlink" title="npm uninstall normalize.css (删除依赖)"></a>npm uninstall normalize.css (删除依赖)</h3><h3 id="npm-update-normalize-css-更新依赖"><a href="#npm-update-normalize-css-更新依赖" class="headerlink" title="npm update normalize.css (更新依赖)"></a>npm update normalize.css (更新依赖)</h3><h3 id="安装更新指定版本"><a href="#安装更新指定版本" class="headerlink" title="安装更新指定版本"></a>安装更新指定版本</h3><p><code>npm i jquery@3.0.0</code> 安装jquery3.0</p><h3 id="安装到开发环境"><a href="#安装到开发环境" class="headerlink" title="安装到开发环境"></a>安装到开发环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i webpack --save-dev</span><br></pre></td></tr></table></figure><p>save: 保存(可写可不写)</p><h2 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h2><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  /*包名*/</span><br><span class="line">  &quot;name&quot;: &quot;es6&quot;,</span><br><span class="line">  /*版本*/</span><br><span class="line">  &quot;version&quot;: &quot;1.0.0&quot;,</span><br><span class="line">  /*描述*/</span><br><span class="line">  &quot;description&quot;: &quot;&quot;,</span><br><span class="line">  /*包的入口文件 可以空*/</span><br><span class="line">  &quot;main&quot;: &quot;chif.js&quot;,</span><br><span class="line">  /*指定命令的快捷方式*/</span><br><span class="line">  &quot;scripts&quot;: &#123;</span><br><span class="line">    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span><br><span class="line">  &#125;,</span><br><span class="line">  &quot;keywords&quot;: [],</span><br><span class="line">  /*作者*/</span><br><span class="line">  &quot;author&quot;: &quot;&quot;,</span><br><span class="line">  /*取可证*/</span><br><span class="line">  &quot;license&quot;: &quot;ISC&quot;,</span><br><span class="line">  /*开发环境*/</span><br><span class="line">  &quot;dependencies&quot;: &#123;</span><br><span class="line">    &quot;bootstrap&quot;: &quot;^4.3.1&quot;,</span><br><span class="line">    &quot;jquery&quot;: &quot;^3.3.1&quot;,</span><br><span class="line">    &quot;vue&quot;: &quot;^2.6.9&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="npm-run-指定命令"><a href="#npm-run-指定命令" class="headerlink" title="npm run [指定命令]"></a>npm run [指定命令]</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">/*指定命令的快捷方式*/</span><br><span class="line"> &quot;scripts&quot;: &#123;</span><br><span class="line">   &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,</span><br><span class="line">   &quot;yo&quot;: &quot;echo \&quot;Hello NPM\&quot;&quot;</span><br><span class="line"> &#125;,</span><br></pre></td></tr></table></figure><h3 id="npm-search"><a href="#npm-search" class="headerlink" title="npm search"></a>npm search</h3><p>npm search命令用于搜索npm仓库，它后面可以跟字符串，也可以跟正则表达式。</p><p>$ npm search&lt;搜索词&gt;</p><p>npm search jquer</p><h3 id="npm-list"><a href="#npm-list" class="headerlink" title="npm list"></a>npm list</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">E:\document\webstorm\html\new\es6&gt;npm list</span><br><span class="line">es6@1.0.0 E:\document\webstorm\html\new\es6</span><br><span class="line">+-- bootstrap@4.3.1</span><br><span class="line">+-- jquery@3.0.0</span><br><span class="line">+-- UNMET PEER DEPENDENCY popper.js@^1.14.7</span><br><span class="line">+-- vue@2.6.9</span><br><span class="line">`-- webpack@4.29.6</span><br></pre></td></tr></table></figure><blockquote><p>npm list命令以树型结构列出当前项目安装的所有模块，以及它们依赖的模块。</p></blockquote><h4 id="npm-list-global"><a href="#npm-list-global" class="headerlink" title="$ npm list -global"></a>$ npm list -global</h4><blockquote><p>加上global参数，会列出全局安装的模块。</p></blockquote><h4 id="npm-list-underscore"><a href="#npm-list-underscore" class="headerlink" title="$ npm list underscore"></a>$ npm list underscore</h4><blockquote><p>npm list命令也可以列出单个模块。</p></blockquote><h3 id="本地模式和全局模式"><a href="#本地模式和全局模式" class="headerlink" title="本地模式和全局模式"></a>本地模式和全局模式</h3><p>npm在默认情况下会从NPM搜索或下载包，将包安装到当前目录的node_modules子目录下。</p><p>如果你熟悉Ruby的gem或者Python的pip，你会发现npm与它们的行为不同，gem或pip总是以全局模式安装，使包可以供所有的程序使用，而npm默认会把包安装到当前目录下。这反映了npm不同的设计哲学。如果把包安装到全局，可以提供程序的重复利用程度，避免同样的内容的多分副本，但坏处是难以处理不同的版本依赖。如果把包安装到当前目录，或者说本地，则不会有不同程序依赖不同版本的包的冲突问题，同时还减轻了包作者的API兼容性压力，但缺陷则是同一个包可能会被安装许多次。</p><h3 id="npm-run"><a href="#npm-run" class="headerlink" title="npm run"></a>npm run</h3><p>npm不仅可以用于模块管理，还可以用于执行脚本。package.json文件有一个scripts字段，可以用于指定脚本命令，供npm直接调用。package.json文件内容：</p><p>{“name”:”myproject”,”devDependencies”:{“jshint”:”latest”,”browserify”:”latest”,”mocha”:”latest”},”scripts”:{“lint”:”jshint **.js”,”test”:”mocha test/“}}</p><h3 id="npm-bin"><a href="#npm-bin" class="headerlink" title="npm bin"></a>npm bin</h3><p>npm bin命令显示相对于当前目录的，Node模块的可执行脚本所在的目录（即.bin目录）。</p><p>E:\document\webstorm\html\new\es6\node_modules.bin</p><h3 id="查看-npm-命令列表"><a href="#查看-npm-命令列表" class="headerlink" title="查看 npm 命令列表"></a>查看 npm 命令列表</h3><p>$ npm help</p><h3 id="查看各个命令的简单用法"><a href="#查看各个命令的简单用法" class="headerlink" title="查看各个命令的简单用法"></a>查看各个命令的简单用法</h3><p>$ npm -l</p><h3 id="查看-npm-的版本"><a href="#查看-npm-的版本" class="headerlink" title="查看 npm 的版本"></a>查看 npm 的版本</h3><p>$ npm -v</p><h3 id="查看-npm-的配置"><a href="#查看-npm-的配置" class="headerlink" title="查看 npm 的配置"></a>查看 npm 的配置</h3><p>$ npm config list -l</p><h3 id="npm-set"><a href="#npm-set" class="headerlink" title="npm set"></a>npm set</h3><p>npm set用来设置环境变量。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm set init-author-name &apos;Your name&apos;</span><br><span class="line">$ npm set init-author-email &apos;Your email&apos;</span><br><span class="line">$ npm set init-author-url &apos;http://yourdomain.com&apos;</span><br><span class="line">$ npm set init-license &apos;MIT&apos;</span><br></pre></td></tr></table></figure></p><h3 id="npm-list命令也可以列出单个模块。"><a href="#npm-list命令也可以列出单个模块。" class="headerlink" title="npm list命令也可以列出单个模块。"></a>npm list命令也可以列出单个模块。</h3><blockquote><p>Node模块采用npm install命令安装。</p></blockquote><p>每个模块可以“全局安装”，也可以“本地安装”。“全局安装”指的是将一个模块安装到系统目录中，各个项目都可以调用。一般来说，全局安装只适用于工具模块，比如eslint和gulp。“本地安装”指的是将一个模块下载到当前项目的node_modules子目录，然后只有在项目目录之中，才能调用这个模块。</p><h4 id="本地安装"><a href="#本地安装" class="headerlink" title="本地安装"></a>本地安装</h4><p><code>$ npm install &lt;package name&gt;</code></p><h4 id="全局安装"><a href="#全局安装" class="headerlink" title="全局安装"></a>全局安装</h4><p><code>$ sudo npm install -global &lt;package name&gt;</code></p><p><code>$ sudo npm install -g &lt;package name&gt;</code></p><h4 id="npm-install也支持直接输入Github代码库地址。"><a href="#npm-install也支持直接输入Github代码库地址。" class="headerlink" title="npm install也支持直接输入Github代码库地址。"></a>npm install也支持直接输入Github代码库地址。</h4><p><code>$ npm install git://github.com/package/path.git</code></p><p><code>$ npm install git://github.com/package/path.git#0.1.0</code></p><h4 id="强制重新安装"><a href="#强制重新安装" class="headerlink" title="强制重新安装"></a>强制重新安装</h4><p>安装之前，npm install会先检查，node_modules目录之中是否已经存在指定模块。如果存在，就不再重新安装了，即使远程仓库已经有了一个新版本，也是如此。</p><p>如果你希望，一个模块不管是否安装过，npm 都要强制重新安装，可以使用-f或–force参数。</p><p><code>$ npm install &lt;packageName&gt; --force</code></p><p>如果你希望，所有模块都要强制重新安装，那就删除node_modules目录，重新执行npm install。</p><p><code>$ rm -rf node_modules</code></p><p><code>$ npm install</code></p><h4 id="安装不同版本"><a href="#安装不同版本" class="headerlink" title="安装不同版本"></a>安装不同版本</h4><blockquote><p>install命令总是安装模块的最新版本，如果要安装模块的特定版本，可以在模块名后面加上@和版本号。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install sax@latest</span><br><span class="line">$ npm install sax@0.1.1</span><br><span class="line">$ npm install sax@&quot;&gt;=0.1.0 &lt;0.2.0&quot;</span><br></pre></td></tr></table></figure><h4 id="如果使用–save-exact参数，会在package-json文件指定安装模块的确切版本。"><a href="#如果使用–save-exact参数，会在package-json文件指定安装模块的确切版本。" class="headerlink" title="如果使用–save-exact参数，会在package.json文件指定安装模块的确切版本。"></a>如果使用–save-exact参数，会在package.json文件指定安装模块的确切版本。</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install readable-stream --save --save-exact</span><br></pre></td></tr></table></figure><p>install命令可以使用不同参数，指定所安装的模块属于哪一种性质的依赖关系，即出现在packages.json文件的哪一项中。</p><p>–save：模块名将被添加到dependencies，可以简化为参数-S。</p><p>–save-dev: 模块名将被添加到devDependencies，可以简化为参数-D。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ npm install sax --save</span><br><span class="line">$ npm install node-tap --save-dev</span><br><span class="line"># 或者</span><br><span class="line">$ npm install sax -S</span><br><span class="line">$ npm install node-tap -D</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本&quot;&gt;&lt;a href=&quot;#基本&quot; class=&quot;headerlink&quot; title=&quot;基本&quot;&gt;&lt;/a&gt;基本&lt;/h1&gt;&lt;h2 id=&quot;命令行&quot;&gt;&lt;a href=&quot;#命令行&quot; class=&quot;headerlink&quot; title=&quot;命令行&quot;&gt;&lt;/a&gt;命令行&lt;/h2&gt;&lt;h
      
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
      <category term="JavaScript" scheme="http://yoursite.com/tags/JavaScript/"/>
    
      <category term="ES" scheme="http://yoursite.com/tags/ES/"/>
    
  </entry>
  
  <entry>
    <title>Emmet</title>
    <link href="http://yoursite.com/2016/05/30/Emmet/"/>
    <id>http://yoursite.com/2016/05/30/Emmet/</id>
    <published>2016-05-30T09:25:34.000Z</published>
    <updated>2019-04-05T14:28:52.639Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Emmet"><a href="#Emmet" class="headerlink" title="Emmet"></a>Emmet</h1><h2 id="Html-Emmet-语法"><a href="#Html-Emmet-语法" class="headerlink" title="Html Emmet 语法"></a>Html Emmet 语法</h2><h3 id="兄弟节点"><a href="#兄弟节点" class="headerlink" title="+ 兄弟节点"></a>+ 兄弟节点</h3><p>兄弟：+</p><p>缩写：div+p+bq</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;blockquote&gt;&lt;/blockquote&gt;</span><br></pre></td></tr></table></figure><h3 id="gt-子节点"><a href="#gt-子节点" class="headerlink" title="&gt; 子节点"></a>&gt; 子节点</h3><p>后代：&gt;</p><p>缩写：nav&gt;ul&gt;li<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;nav&gt;</span><br><span class="line">    &lt;ul&gt;</span><br><span class="line">        &lt;li&gt;&lt;/li&gt;</span><br><span class="line">    &lt;/ul&gt;</span><br><span class="line">&lt;/nav&gt;</span><br></pre></td></tr></table></figure></p><h3 id="id-class-属性-在文本前"><a href="#id-class-属性-在文本前" class="headerlink" title="# id  . class [] 属性 (在文本前)"></a># id  . class [] 属性 (在文本前)</h3><p>缩写：#header<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;header&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>缩写：.title<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;title&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>缩写: form#search.wide<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form id=&quot;search&quot; class=&quot;wide&quot;&gt;&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><p>缩写：p.class1.class2.class3<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class=&quot;class1 class2 class3&quot;&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure></p><p>自定义属性</p><p>缩写：p[title=”Hello world”]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p title=&quot;Hello world&quot;&gt;&lt;/p&gt;</span><br></pre></td></tr></table></figure></p><p>缩写：td[rowspan=2 colspan=3 title]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;td rowspan=&quot;2&quot; colspan=&quot;3&quot; title=&quot;&quot;&gt;&lt;/td&gt;</span><br></pre></td></tr></table></figure></p><p>缩写：[a=’value1′ b=”value2″]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div a=&quot;value1&quot; b=&quot;value2&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><h3 id="多个-在文本后"><a href="#多个-在文本后" class="headerlink" title="* 多个(在文本后)"></a>* 多个(在文本后)</h3><p>乘法：*</p><p>缩写：ul&gt;li*5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure></p><h3 id="父级"><a href="#父级" class="headerlink" title="^ 父级"></a>^ 父级</h3><p>上级：^</p><p>缩写：div+div&gt;p&gt;span+em^bq(返回一级)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;em&gt;&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">    &lt;blockquote&gt;&lt;/blockquote&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>缩写：div+div&gt;p&gt;span+em^^bq(返回两级)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;/div&gt;</span><br><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;p&gt;&lt;span&gt;&lt;/span&gt;&lt;em&gt;&lt;/em&gt;&lt;/p&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;blockquote&gt;&lt;/blockquote&gt;</span><br></pre></td></tr></table></figure></p><h3 id="分组-乘除加减的括号"><a href="#分组-乘除加减的括号" class="headerlink" title="() 分组(乘除加减的括号)"></a>() 分组(乘除加减的括号)</h3><p>分组：()</p><p>缩写：div&gt;(header&gt;ul&gt;li*2&gt;a)+footer&gt;p<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;header&gt;</span><br><span class="line">        &lt;ul&gt;</span><br><span class="line">            &lt;li&gt;&lt;ahref=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">            &lt;li&gt;&lt;ahref=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">        &lt;/ul&gt;</span><br><span class="line">    &lt;/header&gt;</span><br><span class="line">    &lt;footer&gt;</span><br><span class="line">        &lt;p&gt;&lt;/p&gt;</span><br><span class="line">    &lt;/footer&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>缩写：(div&gt;dl&gt;(dt+dd)*3)+footer&gt;p<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;</span><br><span class="line">    &lt;dl&gt;</span><br><span class="line">        &lt;dt&gt;&lt;/dt&gt;</span><br><span class="line">        &lt;dd&gt;&lt;/dd&gt;</span><br><span class="line">        &lt;dt&gt;&lt;/dt&gt;</span><br><span class="line">        &lt;dd&gt;&lt;/dd&gt;</span><br><span class="line">        &lt;dt&gt;&lt;/dt&gt;</span><br><span class="line">        &lt;dd&gt;&lt;/dd&gt;</span><br><span class="line">    &lt;/dl&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;footer&gt;</span><br><span class="line">    &lt;p&gt;&lt;/p&gt;</span><br><span class="line">&lt;/footer&gt;</span><br></pre></td></tr></table></figure></p><h3 id="自动编号"><a href="#自动编号" class="headerlink" title="$ 自动编号"></a>$ 自动编号</h3><p>自增符号：$</p><p>缩写：ul&gt;li.item$*5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li class=&quot;item1&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item2&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item3&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item4&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item5&quot;&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure></p><p>缩写：h$[title=item$]{Header $}*3<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;h1 title=&quot;item1&quot;&gt;Header1&lt;/h1&gt;</span><br><span class="line">&lt;h2 title=&quot;item2&quot;&gt;Header2&lt;/h2&gt;</span><br><span class="line">&lt;h3 title=&quot;item3&quot;&gt;Header3&lt;/h3&gt;</span><br></pre></td></tr></table></figure></p><p>缩写：ul&gt;li.item$$$*5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li class=&quot;item001&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item002&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item003&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item004&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item005&quot;&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure></p><p>缩写：ul&gt;li.item$@-*5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li class=&quot;item5&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item4&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item3&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item2&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item1&quot;&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure></p><p>缩写：ul&gt;li.item$@3*5<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li class=&quot;item3&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item4&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item5&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item6&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item7&quot;&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure></p><h3 id="文本"><a href="#文本" class="headerlink" title="{} 文本"></a>{} 文本</h3><p>缩写：a{Click me}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;&quot;&gt;Click me&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><p>缩写：p&gt;{Click }+a{here}+{ to continue}<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;p&gt; Click &lt;a href=&quot;&quot;&gt;here&lt;/a&gt; to continue &lt;/p&gt;</span><br></pre></td></tr></table></figure></p><h3 id="表单"><a href="#表单" class="headerlink" title="表单"></a>表单</h3><p>form:get<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;&quot; method=&quot;get&quot;&gt;&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><p>form:post<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=&quot;&quot; method=&quot;post&quot;&gt;&lt;/form&gt;</span><br></pre></td></tr></table></figure></p><p>input:b<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type=&quot;button&quot; value=&quot;&quot;&gt;</span><br></pre></td></tr></table></figure></p><h3 id="默认常用"><a href="#默认常用" class="headerlink" title="默认常用"></a>默认常用</h3><ul><li>div</li></ul><p>div.lay(复杂)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;lay&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>div.container(复杂)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>.layui(简单)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;layui&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>.container(简单)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;container&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure></p><p>ul&gt;li.item*5(复杂)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul&gt;</span><br><span class="line">    &lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</span><br><span class="line">    &lt;li class=&quot;item&quot;&gt;&lt;/li&gt;</span><br><span class="line">&lt;/ul&gt;</span><br></pre></td></tr></table></figure></p><p>ul.item*5(简单)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;ul class=&quot;item&quot;&gt;&lt;/ul&gt;</span><br><span class="line">&lt;ul class=&quot;item&quot;&gt;&lt;/ul&gt;</span><br><span class="line">&lt;ul class=&quot;item&quot;&gt;&lt;/ul&gt;</span><br><span class="line">&lt;ul class=&quot;item&quot;&gt;&lt;/ul&gt;</span><br><span class="line">&lt;ul class=&quot;item&quot;&gt;&lt;/ul&gt;</span><br></pre></td></tr></table></figure></p><p>table&gt;tr.row<em>2&gt;td.col</em>3(复杂)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure></p><p>table&gt;.row<em>2&gt;.col</em>3(简单)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;</span><br><span class="line">    &lt;tr class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">    &lt;tr class=&quot;row&quot;&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">        &lt;td class=&quot;col&quot;&gt;&lt;/td&gt;</span><br><span class="line">    &lt;/tr&gt;</span><br><span class="line">&lt;/table&gt;</span><br></pre></td></tr></table></figure></p><h3 id="默认Tab生成"><a href="#默认Tab生成" class="headerlink" title="默认Tab生成"></a>默认Tab生成</h3><p>a<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><p>a:mail<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;mailto:&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><p>a:link<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;http://&quot;&gt;&lt;/a&gt;</span><br></pre></td></tr></table></figure></p><p>script:src<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=&quot;&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></p><p>meta<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta&gt;</span><br></pre></td></tr></table></figure></p><h2 id="CSS-Emmet-语法"><a href="#CSS-Emmet-语法" class="headerlink" title="CSS Emmet 语法"></a>CSS Emmet 语法</h2><h3 id="margin-边距"><a href="#margin-边距" class="headerlink" title="margin(边距)"></a>margin(边距)</h3><p>m<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: ;</span><br></pre></td></tr></table></figure></p><p>p<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">padding: ;</span><br></pre></td></tr></table></figure></p><p>m10(默认是px)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: 10px;</span><br></pre></td></tr></table></figure></p><p>m10p(百分数p)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: 10%;</span><br></pre></td></tr></table></figure></p><p>m10r()<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: 10rem;</span><br></pre></td></tr></table></figure></p><p>m10-20-10-2(上右下左)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: 10px 20px 10px 2px;</span><br></pre></td></tr></table></figure></p><p>m10p20p<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: 10% 20%;</span><br></pre></td></tr></table></figure></p><p>mt10(上)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin-top: 10px;</span><br></pre></td></tr></table></figure></p><p>ml10(左)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin-left: 10px;</span><br></pre></td></tr></table></figure></p><p>mb1e(下)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin-bottom: 10px;</span><br></pre></td></tr></table></figure></p><p>mr10(右)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin-right: 10px;</span><br></pre></td></tr></table></figure></p><p>m-10(负数)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: -10px;</span><br></pre></td></tr></table></figure></p><p>m-10–20(两个负数)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">margin: -10px -20px;</span><br></pre></td></tr></table></figure></p><h3 id="color-颜色"><a href="#color-颜色" class="headerlink" title="color 颜色"></a>color 颜色</h3><p>c<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color: #000;</span><br></pre></td></tr></table></figure></p><p>c#f<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color: #ffffff;</span><br></pre></td></tr></table></figure></p><p>c#fO<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color: #fofofo;</span><br></pre></td></tr></table></figure></p><p>c:rgb<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color: rgb(0, 0, 0);</span><br></pre></td></tr></table></figure></p><p>c:rgba<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">color: rgba(0, 0, 0, 0.5);</span><br></pre></td></tr></table></figure></p><h3 id="property-属性"><a href="#property-属性" class="headerlink" title="property 属性"></a>property 属性</h3><p>pore(边距)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">padding-right: ;</span><br></pre></td></tr></table></figure></p><p>posa(定位)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">position: absolute;</span><br></pre></td></tr></table></figure></p><p> d:n(块)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">display: none;</span><br><span class="line">display: block;</span><br><span class="line">display: inline;</span><br></pre></td></tr></table></figure></p><p> ov:h(滚动)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">overflow: hidden;</span><br><span class="line">overflow: scroll;</span><br></pre></td></tr></table></figure></p><p> cur:p(鼠标)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cursor: pointer;</span><br><span class="line">cursor: hand;</span><br></pre></td></tr></table></figure></p><p>ta:1/ta:c(字体位置)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">text-align: center;</span><br><span class="line">text-align: left;</span><br></pre></td></tr></table></figure></p><p>fw:n/fw:b(字体宽度)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">font-weight: normal;</span><br><span class="line">font-weight: bold;</span><br></pre></td></tr></table></figure></p><p>fz/fz16/fz16!(字体大小)<br><code>`</code><br>font-size: ;<br>font-size: 16px;<br>font-size: 16px !important;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Emmet&quot;&gt;&lt;a href=&quot;#Emmet&quot; class=&quot;headerlink&quot; title=&quot;Emmet&quot;&gt;&lt;/a&gt;Emmet&lt;/h1&gt;&lt;h2 id=&quot;Html-Emmet-语法&quot;&gt;&lt;a href=&quot;#Html-Emmet-语法&quot; class=&quot;header
      
    
    </summary>
    
      <category term="前端" scheme="http://yoursite.com/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="HTML" scheme="http://yoursite.com/tags/HTML/"/>
    
      <category term="CSS" scheme="http://yoursite.com/tags/CSS/"/>
    
      <category term="前端" scheme="http://yoursite.com/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="web" scheme="http://yoursite.com/tags/web/"/>
    
  </entry>
  
</feed>
